<common:LayoutAwarePage
    x:Name="PageRoot"
    x:Class="RoboZZle.WinRT.ProgramEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:RoboZZle.WinRT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:RoboZZle.WinRT.Views"
    xmlns:sample="using:RoboZZle.DesignTime"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    Background="{StaticResource ContentBackground}"
    
    DataContext="{StaticResource EmptyEditorViewModel}"
    d:DataContext="{d:DesignInstance Type=sample:SampleEditorViewModel, IsDesignTimeCreatable=True}"
    
    d:DesignWidth="800"
    d:DesignHeight="480"
    
    KeyDown="SelfOnKeyDown"
    
    mc:Ignorable="d">
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}"
          Background="{StaticResource ContentBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ChildrenTransitions>
            <TransitionCollection/>
        </Grid.ChildrenTransitions>

        <!-- Back button and page title -->
        <Grid Background="{StaticResource Blue}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="BackButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=PageRoot}"
                    Style="{StaticResource BackButtonStyle}"
                    Margin="15,0,0,8"
                    />
            <Grid Grid.Column="1" Width="40" Height="32" Margin="10">
                <Grid>
                    <SymbolIcon Symbol="Contact"/>
                    <toolkit:ImageEx Source="{x:Bind App.Social.ProfilePicture}" IsCacheEnabled="True" Margin="-4" Width="28" Height="28"/>
                </Grid>
            </Grid>
            <TextBlock Grid.Column="2" VerticalAlignment="Center"
                       Text="{Binding Puzzle.Title}"
                       Foreground="White"
                       />

            <CommandBar x:Name="PlayEditControls"
                    Grid.Column="3"
                    d:IsHidden="false"
                    Background="Transparent"
                    VerticalAlignment="Bottom"
                    Margin="0,0,30,8"
                    Padding="0,8,0,0"
                    Foreground="White"
                    >
                <CommandBar.Resources>
                    <Style TargetType="AppBarButton">
                        <Setter Property="Foreground" Value="White"/>
                    </Style>
                </CommandBar.Resources>
                <AppBarButton x:Uid="Start" Icon="Play" Label=".start" Command="{Binding PlayCommand}" x:Name="Start" />
                <AppBarButton x:Uid="Pause" Icon="Pause" Label=".pause" x:Name="Pause"
                            Command="{Binding PauseCommand}"
                            />
                <AppBarButton x:Uid="Step" Icon="Next" Label=".step"
                                Command="{Binding StepCommand}"
                                />
                <AppBarButton x:Uid="Edit" Icon="Edit" Label=".edit" x:Name="Edit"
                            Command="{Binding StopCommand}"
                            />
                
                <CommandBar.SecondaryCommands>
                    <AppBarButton x:Uid="Undo"
                                  Icon="Undo" Label=".undo"
                                  Command="{Binding UndoCommand}"
                    />
                    <AppBarButton x:Uid="Redo"
                                  Icon="Redo" Label=".redo"
                                  Command="{Binding RedoCommand}"
                    />
                    <AppBarSeparator/>
                    <AppBarButton  x:Name="TutorialToggle" x:Uid="TutorialToggle"
                                   Icon="Help" Label=".tutorial"
                    />
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>

        <Grid Grid.Row="1" x:Name="ContentGrid"
              Background="{StaticResource ContentBackground}"
              Margin="20,0,20,20"
        >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>

            <TextBlock
                Text="{Binding Puzzle.About, Mode=OneTime}"
                Style="{StaticResource EditorPuzzleTitleStyle}"
                TextWrapping="NoWrap"
                TextTrimming="WordEllipsis"
                Grid.ColumnSpan="3"
                Margin="0,10,0,10"
            />

            <views:CommandSetView
                Margin="0,0,15,0"
                Grid.Row="1" Grid.Column="0"
                x:Name="CommandSetView"
                DataContext="{Binding PuzzleViewModel, Mode=OneTime}" VerticalAlignment="Bottom"
                IsEnabled="{Binding DataContext.CanChangeCurrentCommand, ElementName=PageRoot}"
                HorizontalAlignment="Left"
                d:DesignWidth="240"
                />

            <views:PuzzleStateView Grid.Column="1" Grid.Row="1"
                PointerPressed="FastForward_PointerPressed" PointerReleased="FastForward_PointerReleased" PointerCanceled="FastForward_PointerCanceled" PointerCaptureLost="FastForward_PointerCanceled"
                VerticalAlignment="Top"
                PuzzleState="{Binding PuzzleState, Mode=OneWay}"
                StepDuration="{Binding Execution.StepTime, Mode=OneWay, Converter={StaticResource FastForwardConverter}}"
                />
            
            <Viewbox
                Grid.Column="2" Grid.Row="1"
                VerticalAlignment="Bottom"
                Margin="15,0,10,73"
            >
                <views:ProgramView
                    x:Name="ProgramView"
                    DataContext="{Binding Program, Mode=OneWay}"
                    IsEnabled="{Binding DataContext.IsEditing, ElementName=PageRoot}"
                    CurrentCommand="{Binding DataContext.CurrentCommandIndex, ElementName=PageRoot, Mode=TwoWay}"
                    PreviewKeyDown="ProgramView_OnKeyDown"
                    d:DesignWidth="280"
                />
            </Viewbox>
        </Grid>
        
        <views:SolvedOverlay Grid.Row="1" x:Name="SolvedOverlay"
            Visibility="{Binding IsViewingStatistics, Converter={StaticResource BooleanToVisibilityConverter}}" d:IsHidden="True"/>

        <Border Grid.Row="0" Grid.RowSpan="2" x:Name="TutorialPopup"
            Background="{StaticResource ContentBackground}"
            Margin="25"
            BorderThickness="4"
            MaxWidth="960" MaxHeight="660"
            BorderBrush="Aqua"
                Visibility="Collapsed"
            >
            <Grid>
                <Button Click="ToggleTutorial" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <SymbolIcon Symbol="ClosePane"/>
                </Button>
                <views:TutorialPopup x:Name="TutorialPopupContent" />
            </Grid>
        </Border>

        <views:LoadingOverlay Grid.Row="1" x:Name="Loading" Visibility="Visible" d:IsHidden="True"/>
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
