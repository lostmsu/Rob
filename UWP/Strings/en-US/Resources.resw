<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllCollection.Content" xml:space="preserve">
    <value>ALL</value>
  </data>
  <data name="App.Text" xml:space="preserve">
    <value>Rob</value>
  </data>
  <data name="Settings.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="CampaignCollection.Content" xml:space="preserve">
    <value>CAMPAIGN</value>
  </data>
  <data name="CommandsClear.Text" xml:space="preserve">
    <value>CLEAR</value>
  </data>
  <data name="DarkTheme.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Difficulty.Text" xml:space="preserve">
    <value>difficulty:</value>
  </data>
  <data name="Edit.Label" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="HideSolved.Text" xml:space="preserve">
    <value>hide solved</value>
  </data>
  <data name="HideUnpopular.Text" xml:space="preserve">
    <value>hide unpopular</value>
  </data>
  <data name="LightTheme.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>loading...</value>
  </data>
  <data name="LoadingScreen.Text" xml:space="preserve">
    <value>loading...</value>
  </data>
  <data name="LoggingIn" xml:space="preserve">
    <value>logging in...</value>
  </data>
  <data name="Pause.Label" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Popularity.Text" xml:space="preserve">
    <value>popularity:</value>
  </data>
  <data name="QueryingNewLevels" xml:space="preserve">
    <value>checking for new puzzles...</value>
  </data>
  <data name="Redo.Label" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="SavingNewLevels" xml:space="preserve">
    <value>saving updates...</value>
  </data>
  <data name="Search.Label" xml:space="preserve">
    <value>Search</value>
    <comment>Search button caption</comment>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>puzzle title</value>
  </data>
  <data name="Start.Label" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Step.Label" xml:space="preserve">
    <value>Step</value>
  </data>
  <data name="SubmittingSolutions" xml:space="preserve">
    <value>submitting solutions...</value>
  </data>
  <data name="ThemeSetting.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeSettingNote.Text" xml:space="preserve">
    <value>Theme change requires app to restart</value>
  </data>
  <data name="UISetting.Text" xml:space="preserve">
    <value>UI</value>
  </data>
  <data name="Undo.Label" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="AccountSetting.Text" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountSettingDescription.Text" xml:space="preserve">
    <value>Connect to the online service to synchronize your solved puzzle list, and share statistics with others.</value>
  </data>
  <data name="LoginSetting.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="PasswordSetting.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="EmailSetting.Text" xml:space="preserve">
    <value>E-mail (only to register)</value>
  </data>
  <data name="LoginButton.Content" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="RegisterButton.Content" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Conditions.Content" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="FirstSteps.Content" xml:space="preserve">
    <value>First Steps</value>
  </data>
  <data name="Recursion.Content" xml:space="preserve">
    <value>Recursion</value>
  </data>
  <data name="TutorialTitle.Text" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="TutorialToggle.Label" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="AI_Agree" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AI_Agreement" xml:space="preserve">
    <value>Share the steps you take to solve puzzles with an AI research project. The goal is to build a fully automated solver for Rob. We will analyze what does it take for you to solve puzzles, and improve our algorithm accordingly.

Terms and conditions
1. You allow submission of puzzle solution telemetry to Lost Tech LLC.
  Submitted telemetry can include:
   - opening puzzle
   - program editing steps (editing commands, undo, redo, etc.)
   - running, stopping, pausing, and stepping with a robot
   - timestamps for all actions above
   - your login and hashed password for RoboZZle.com

2. You allow Lost Tech LLC to use your login and hashed password for RoboZZle.com to verify that you have a valid account on RoboZZle.com. Lost Tech LLC will not store this data or share it with 3rd parties.

3. You allow all other telemetry listed in 1. to be used for the purpose of research in artificial intelligence.

4. You allow Lost Tech LLC royalty-free use of this data, and any derived products of the research for any commercial purpose, including sharing with 3rd parties.</value>
  </data>
  <data name="AI_Decline" xml:space="preserve">
    <value>Decline</value>
  </data>
  <data name="AI_MustLogin" xml:space="preserve">
    <value>To participate in AI research, you must login or register new account</value>
  </data>
  <data name="AI_OfferTitle" xml:space="preserve">
    <value>Participate in AI research</value>
  </data>
  <data name="AI_Research.Text" xml:space="preserve">
    <value>AI Research</value>
  </data>
  <data name="AI_ResearchBlog.Text" xml:space="preserve">
    <value>more info</value>
  </data>
  <data name="AI_ResearchSetting.Header" xml:space="preserve">
    <value>Participate in Rob AI research</value>
  </data>
  <data name="BlueConditionHint.Text" xml:space="preserve">
    <value>Only on Blue</value>
  </data>
  <data name="CallFunctionHint.Text" xml:space="preserve">
    <value>Call a function (Fx)</value>
  </data>
  <data name="GreenConditionHint.Text" xml:space="preserve">
    <value>Only on Green</value>
  </data>
  <data name="MoveAroundHint.Text" xml:space="preserve">
    <value>Select items on the screen</value>
  </data>
  <data name="MovementActionsHint.Text" xml:space="preserve">
    <value>Move or rotate robot</value>
  </data>
  <data name="PaintHint.Text" xml:space="preserve">
    <value>Paint Cell (when available)</value>
  </data>
  <data name="RedConditionHint.Text" xml:space="preserve">
    <value>Only on Red</value>
  </data>
  <data name="RunPauseHint.Text" xml:space="preserve">
    <value>Run/Pause robot</value>
  </data>
  <data name="StopHint.Text" xml:space="preserve">
    <value>Stop robot</value>
  </data>
  <data name="UnconditionalHint.Text" xml:space="preserve">
    <value>Remove condition</value>
  </data>
  <data name="XboxKeyMap.Content" xml:space="preserve">
    <value>Controller buttons</value>
  </data>
  <data name="No_Internet" xml:space="preserve">
    <value>No Internet</value>
  </data>
  <data name="SubmitFailed_NoInternet" xml:space="preserve">
    <value>Failed to submit solution, because online service is unavailable.
You will need to rerun this puzzle to resubmit.</value>
  </data>
</root>